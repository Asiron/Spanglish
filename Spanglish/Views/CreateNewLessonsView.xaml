<UserControl x:Class="Spanglish.Views.CreateNewLessonsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vs="clr-namespace:Spanglish.Validators"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter  x:Key="boolToVisibility" />
        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Background" Value="GhostWhite"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
        </Style>
        <!-- DataGrid Background -->
        <LinearGradientBrush x:Key="BlueLightGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFEAF3FF"/>
            <GradientStop Offset="0.654" Color="#FFC0DEFF"/>
            <GradientStop Offset="1" Color="#FFC0D9FB"/>
        </LinearGradientBrush>

        <!-- DatGrid style -->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Background" Value="{StaticResource BlueLightGradientBrush}" />
            <Setter Property="BorderBrush" Value="#FFA6CCF2" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="#FDFFD0" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="#FFD3D0" />
            <Setter Property="RowHeaderWidth" Value="0" />
        </Style>

        
        <!-- Row Style-->
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <!--<Setter Property="Margin" Value="4"/>-->
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.3*"></RowDefinition>
            <RowDefinition Height="0.3*"></RowDefinition>
            <RowDefinition Height="5*"></RowDefinition>
            <RowDefinition Height="0.6*"></RowDefinition>

        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="Spanglish" 
                   FontWeight="Bold" FontSize="18"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />
        <TextBlock Grid.Row="1" Text="Create or Modify lessons" 
                   FontWeight="Bold" FontSize="18"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />
        <Border Grid.Row="2" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="4*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Grid.Row="2">
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.5*"></RowDefinition>
                            <RowDefinition Height="4*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                            <RowDefinition Height="0.70*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Lessons" FontWeight="Bold" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ListView Grid.Row="1" ItemsSource="{Binding Lessons}" SelectedItem="{Binding CurrentLesson}" >
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="2">
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ShowLessonCmd}"/>
                                        </Grid.InputBindings>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="1" Text="{Binding Name}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBox Grid.Row="2" Margin="10,10,10,20" Name="tbEnterNewLessonName" Text="{Binding Path=NewLessonName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <Validation.ErrorTemplate>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="textBox"/>
                                        <ItemsControl ItemsSource="{Binding}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding ErrorContent}" Foreground="Red" FontSize="10" TextWrapping="Wrap" Width="100" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </ControlTemplate>
                            </Validation.ErrorTemplate>
                        </TextBox>
                        <Button Grid.Row="3" Margin="10" Content="Add new lesson" Command="{Binding AddNewLessonCmd}"></Button>
                    </Grid>
                </Border>
                <Border Grid.Column="1" Grid.Row="2" Visibility="{Binding ShowModifyLessonSubView, Mode=TwoWay, Converter={StaticResource boolToVisibility}}">
                    <DataGrid Name="MainGrid" 
                          RowStyle="{StaticResource RowStyle}"    
                          ItemsSource="{Binding CurrentLessonWords, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          SelectedItem="{Binding CurrentEditingWord}"
                          AutoGenerateColumns="False" 
                          DockPanel.Dock="Top">
                        
                        <DataGrid.RowValidationRules>
                            <ExceptionValidationRule></ExceptionValidationRule>
                        </DataGrid.RowValidationRules>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="First Language Defintion" Width="5*" IsReadOnly="false">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="FirstLangDefinition" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True"/>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Second Language Defintion" Width="5*" IsReadOnly="false">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="SecondLangDefinition" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True"/>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Level" Width="1.5*" IsReadOnly="false">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="Level" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True"/>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Delete" Width="1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.DeleteSelectedWordCmd}" Content="Delete"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="AddingNewEvent">
                                <i:InvokeCommandAction Command="{Binding AddNewLessonRowCmd}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </Border>
            </Grid>
        </Border>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Margin="8" Grid.Column="0" Content="Save!" Command="{Binding SaveLessonsCmd}"></Button>
            <Button Margin="8" Grid.Column="1" Content="Go back" Command="{Binding RevertToPreviousViewModelCmd}"></Button>

        </Grid>
    </Grid>
 
</UserControl>
